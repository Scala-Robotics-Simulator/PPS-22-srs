syntax = "proto3";

package io.github.srs.protos;

message RLRequest {
  oneof request {
    InitRequest init = 1;
    ResetRequest reset = 2;
    StepRequest step = 3;
    RenderRequest render = 4;
    CloseRequest close = 5;
  }
}

message InitRequest {
  string config = 1; // YAML string
}

message ResetRequest {
  optional int32 seed = 1;
  map<string, string> options = 2;
}

message ContinuousAction {
  double left_wheel = 1;  // Range: [-1.0, 1.0]
  double right_wheel = 2; // Range: [-1.0, 1.0]
}

message StepRequest { map<string, ContinuousAction> actions = 1; }

message RenderRequest {
  optional int32 width = 1;
  optional int32 height = 2;
}

message CloseRequest {}

message RLResponse {
  oneof response {
    InitResponse init = 1;
    ResetResponse reset = 2;
    StepResponse step = 3;
    RenderResponse render = 4;
    CloseResponse close = 5;
    ErrorResponse error = 6;
  }
}

message InitResponse {
  bool ok = 1;
  optional string message = 2;
}

message Observation {
  repeated double proximity_values = 1; // Fixed size: 8 values
  repeated double light_values = 2;     // Fixed size: 8 values
}

message ResetResponse {
  map<string, Observation> observations = 1;
  map<string, string> info = 2;
}

message StepResponse {
  map<string, Observation> observations = 1;
  map<string, double> rewards = 2;
  map<string, bool> terminateds = 3;
  map<string, bool> truncateds = 4;
  map<string, string> infos = 5;
}

message RenderResponse {
  bytes image = 1;
  string format = 2;
  int32 width = 3;
  int32 height = 4;
  int32 channels = 5;
}

message CloseResponse {
  bool ok = 1;
  optional string message = 2;
}

message ErrorResponse {
  string message = 1;
  ErrorCode code = 2;
}

enum ErrorCode {
  UNKNOWN = 0;
  INVALID_CONFIG = 1;
  AGENT_NOT_FOUND = 2;
  INVALID_ACTION = 3;
}

service RL {
  rpc Interact(stream RLRequest) returns (stream RLResponse) {}
}
