name: CI/CD Process
on:
  workflow_call:
    inputs:
      release:
        required: false
        type: string
        default: "false"
  workflow_dispatch: # Optional, for direct invocation
    inputs:
      release:
        description: "Trigger a release?"
        required: false
        default: "false"
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2025, macos-15]
        java-version: [17, 21, 23]
    runs-on: ${{ matrix.os }}
    env:
      ci: true
    steps:
      - name: Checkout
        uses: DanySK/action-checkout@0.2.24
      - name: Set up JDK
        uses: actions/setup-java@v5.0.0
        with:
          distribution: temurin
          java-version: ${{ matrix.java-version }}
          cache: sbt
      - uses: sbt/setup-sbt@v1.1.14
      - name: Build and test
        shell: bash
        run: sbt +test

  build-python:
    defaults:
      run:
        working-directory: python
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2025, macos-15]
        python-version: ["3.10", "3.12", "3.13"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: DanySK/action-checkout@0.2.24
      - name: Set up python
        uses: actions/setup-python@v6.0.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up uv
        uses: astral-sh/setup-uv@v7
        with:
          activate-environment: "true"
      - name: Install dependencies
        run: uv pip install -r pyproject.toml
      - name: Run tests
        run: uv run pytest

  code-style:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: DanySK/action-checkout@0.2.24
      - name: Set up JDK
        uses: actions/setup-java@v5.0.0
        with:
          distribution: temurin
          java-version: 21
          cache: sbt
      - uses: sbt/setup-sbt@v1.1.14
      - name: Compile
        shell: bash
        run: sbt compile
      - name: Check formatting
        shell: bash
        run: sbt scalafmtCheckAll
      - name: Run linter
        shell: bash
        run: sbt "scalafixAll --check"

  code-style-python:
    defaults:
      run:
        working-directory: python
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: DanySK/action-checkout@0.2.24
      - name: Set up python
        uses: actions/setup-python@v6.0.0
        with:
          python-version: "3.13"
      - name: Set up uv
        uses: astral-sh/setup-uv@v7
        with:
          activate-environment: "true"
      - name: Install dependencies
        run: uv pip install -r pyproject.toml
      - name: Lint code
        run: uv run ruff check
      - name: Check formatting
        run: uv run ruff format --check

  code-coverage:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          persist-credentials: false
      - name: Set up JDK
        uses: actions/setup-java@v5.0.0
        with:
          distribution: temurin
          java-version: 21
          cache: sbt
      - uses: sbt/setup-sbt@v1.1.14
      - name: Extract Scala version
        id: scala-version
        run: |
          echo "version=$(sbt 'show scalaVersion' | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+' | tail -n 1)" >> "$GITHUB_OUTPUT"
      - name: Run Coverage
        run: sbt clean jacoco
      - name: Add coverage to PR
        if: github.ref != 'refs/heads/main'
        id: jacoco
        uses: madrapps/jacoco-report@v1.7.2
        with:
          paths: |
            ${{ github.workspace }}/**/target/scala-${{ steps.scala-version.outputs.version }}/jacoco/report/jacoco.xml
          token: ${{ secrets.GH_TOKEN }}
          update-comment: true
          title: Coverage report
      - name: Upload coverage to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: |
          export CI_BRANCH="${GITHUB_REF#refs/heads/}"
          sbt clean jacoco jacocoCoveralls

  dry-website-build:
    runs-on: ubuntu-24.04
    outputs:
      scala_version: ${{ steps.scala-version.outputs.version }}
    steps:
      - name: Checkout
        uses: danysk/action-checkout@0.2.24
      - name: Setup scala
        uses: actions/setup-java@v5.0.0
        with:
          distribution: temurin
          java-version: 21
          cache: sbt
      - uses: sbt/setup-sbt@v1.1.14
      - name: Build scaladoc
        shell: bash
        run: sbt doc
      - name: Extract Scala version
        id: scala-version
        run: |
          echo "version=$(sbt 'show scalaVersion' | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+' | tail -n 1)" >> "$GITHUB_OUTPUT"
      - name: Update docs home page
        shell: bash
        run: cp README.md ./docs/src/pages/index.md
      - name: Test website generation
        run: |
          cd docs
          npm ci
          npm run build

  release:
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main' && inputs.release == 'true'
    permissions:
      contents: write
      packages: write
    outputs:
      has_released: ${{ env.HAS_RELEASED }}
      release_version: ${{ env.RELEASE_VERSION }}
    concurrency:
      group: release-${{ github.event.number || github.ref }}
    runs-on: ubuntu-24.04
    needs:
      - build
      - build-python
      - code-style
      - code-style-python
      - code-coverage
      - dry-website-build
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          persist-credentials: false
      - name: Setup node
        uses: actions/setup-node@v6.0.0
        with:
          cache: npm
          node-version: lts/*
      - run: npm ci
      - name: Setup scala
        uses: actions/setup-java@v5.0.0
        with:
          distribution: temurin
          java-version: 21
          cache: sbt
      - uses: sbt/setup-sbt@v1.1.14
      - name: Assembly fatjar
        run: |
          sbt assembly
          mkdir -p target/fatjar
          mv target/scala-${{ needs.dry-website-build.outputs.scala_version }}/PPS-22-srs-assembly-*.jar target/fatjar/${{ github.event.repository.name }}.jar
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release

  upload-docs:
    concurrency:
      # Only one release job at a time. Strictly sequential.
      group: upload-docs-${{ github.event.number || github.ref }}
    runs-on: ubuntu-24.04
    needs:
      - build
      - build-python
      - code-style
      - code-style-python
      - code-coverage
      - dry-website-build
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: DanySK/action-checkout@0.2.24
      - name: Setup node
        uses: actions/setup-node@v6.0.0
        with:
          cache: npm
          node-version: lts/*
      - name: Set up JDK
        uses: actions/setup-java@v5.0.0
        with:
          distribution: temurin
          java-version: 21
          cache: sbt
      - uses: sbt/setup-sbt@v1.1.14
      - name: Generate ScalaDoc
        run: sbt doc
      - name: Update docs home page
        shell: bash
        run: cp README.md ./docs/src/pages/index.md
      - name: Generate doc website
        run: |
          cd docs
          npm install
          npm run build
          if [ -d ../target/scala-${{ needs.dry-website-build.outputs.scala_version }}/api/ ]
          then
            mv ../target/scala-${{ needs.dry-website-build.outputs.scala_version }}/api/ ./build/
          fi
      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: gh-pages
          build_dir: docs/build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-image:
    runs-on: ubuntu-24.04
    needs: release
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      RELEASE_VERSION: ${{ needs.release.outputs.release_version }}
      HAS_RELEASED: ${{ needs.release.outputs.has_released }}
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: DanySK/action-checkout@0.2.24
      - name: Setup scala
        uses: actions/setup-java@v5.0.0
        with:
          distribution: temurin
          java-version: 21
          cache: sbt
      - uses: sbt/setup-sbt@v1.1.14

      - name: Build Docker Image
        run: sbt docker:publishLocal

      - name: Log in to the Container registry
        uses: docker/login-action@v3.6.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag docker image
        if: env.HAS_RELEASED == 'true'
        run: docker tag ghcr.io/scala-robotics-simulator/pps-22-srs:latest ghcr.io/scala-robotics-simulator/pps-22-srs:${{ env.RELEASE_VERSION }}
      - name: Publish tagged docker image
        if: env.HAS_RELEASED == 'true'
        run: docker ghcr.io/scala-robotics-simulator/pps-22-srs:${{ env.RELEASE_VERSION }}

      - name: Publish latest docker image
        run: docker push ghcr.io/scala-robotics-simulator/pps-22-srs:latest

  success:
    runs-on: ubuntu-24.04
    needs:
      - build
      - build-python
      - code-style
      - code-style-python
      - dry-website-build
      - release
      - upload-docs
      - deploy-image
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
