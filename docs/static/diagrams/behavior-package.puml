@startuml behavior-package
title Behavior Package Diagram

skinparam packageStyle rectangle
skinparam shadowing true
skinparam shadowingColor #aaa
skinparam shadowingOpacity 0.5
skinparam classAttributeIconSize 0
skinparam ArrowColor #666

package "behavior" {

   class Rule <<type>> {
    + Kleisli[F, I, Option[A]]
    --
    Regola parziale, pu√≤ non produrre A
  }
   class Behavior <<type>> {
    + Kleisli[F, I, A]
    --
    Funzione totale, garantisce A
  }

   class Rules {
        + avoidObstacle(front, safeDist): Rule[F, SensorReadings, Action[F]]
        + alwaysForward: Rule[F, SensorReadings, Action[F]]
      }
      class Policy {
        + simple(front): Behavior[F, SensorReadings, Action[F]]
      }

  class BehaviorDsl
}

' Relazioni chiare e minimali
Rules --> Rule           : fornisce
BehaviorDsl ..> Rule     : costruisce/compone
BehaviorDsl ..> Behavior : chiude con default()
Policy --> Rules         : usa
Policy --> Behavior      : restituisce


@enduml
