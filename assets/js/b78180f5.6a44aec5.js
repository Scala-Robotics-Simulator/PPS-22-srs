"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9520],{4933:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>t,toc:()=>r});const t=JSON.parse('{"id":"implementation/simone-ceredi/environment","title":"Implementazione dell\'ambiente di simulazione","description":"L\'Environment \xe8 implementato a partire da un trait EnvironmentParameters che definisce i parametri dell\'ambiente, quali:","source":"@site/docs/05-implementation/02-simone-ceredi/1-environment.md","sourceDirName":"05-implementation/02-simone-ceredi","slug":"/implementation/simone-ceredi/environment","permalink":"/PPS-22-srs/docs/implementation/simone-ceredi/environment","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"Simone Ceredi","permalink":"/PPS-22-srs/docs/implementation/simone-ceredi/"},"next":{"title":"Implementazione dei DSL","permalink":"/PPS-22-srs/docs/implementation/simone-ceredi/dsl"}}');var a=n(4848),l=n(8453);const o={sidebar_position:1},s="Implementazione dell'ambiente di simulazione",d={},r=[{value:"DSL",id:"dsl",level:2},{value:"Gestione della validazione",id:"gestione-della-validazione",level:2}];function c(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.header,{children:(0,a.jsx)(i.h1,{id:"implementazione-dellambiente-di-simulazione",children:"Implementazione dell'ambiente di simulazione"})}),"\n",(0,a.jsxs)(i.p,{children:["L'",(0,a.jsx)(i.code,{children:"Environment"})," \xe8 implementato a partire da un ",(0,a.jsx)(i.em,{children:"trait"})," ",(0,a.jsx)(i.code,{children:"EnvironmentParameters"})," che definisce i parametri dell'ambiente, quali:"]}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"dimensioni dell'ambiente;"}),"\n",(0,a.jsx)(i.li,{children:"entit\xe0 presenti nell'ambiente;"}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"lightField"})," per ottenere informazioni su un campo di luce nell'ambiente."]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Le informazioni sulla luce sono calcolate solo se necessario, grazie a un sistema di lazy evaluation che evita calcoli inutili."}),"\n",(0,a.jsx)(i.h2,{id:"dsl",children:"DSL"}),"\n",(0,a.jsx)(i.p,{children:"Per la creazione dell'ambiente \xe8 possibile utilizzare un Domain Specific Language (DSL) che semplifica la definizione delle propriet\xe0 dell'ambiente e delle entit\xe0 in esso contenute."}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-scala",children:"infix def withWidth(width: Int): Environment\n\ninfix def withHeight(height: Int): Environment\n\ndef withHighPrecisionLighting: Environment\n\ndef withFastLighting: Environment\n\ndef withDefaultLighting: Environment\n\ninfix def containing(entities: Set[Entity]): Environment\n\ninfix def containing(entity: Entity): Environment\n\ninfix def and(entity: Entity): Environment\n\ninfix def validate: Validation[ValidEnvironment]\n"})}),"\n",(0,a.jsx)(i.admonition,{title:"Esempio di creazione di un ambiente",type:"tip",children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-scala",children:"environment withWidth 10 withHeight 10 containing robot and obstacle and light\n"})})}),"\n",(0,a.jsxs)(i.p,{children:["Allo stesso modo, il DSL rende pi\xf9 semplice la gestione della configurazione dell'ambiente, come mostrato nella sezione ",(0,a.jsx)(i.a,{href:"/PPS-22-srs/docs/implementation/simone-ceredi/configuration",children:"Gestione della configurazione"}),"."]}),"\n",(0,a.jsx)(i.h2,{id:"gestione-della-validazione",children:"Gestione della validazione"}),"\n",(0,a.jsxs)(i.p,{children:["La validazione dell'ambiente e delle entit\xe0 al suo interno sfruttano il package ",(0,a.jsx)(i.code,{children:"io.github.srs.model.validation"})," che fornisce strumenti per la definizione di regole di validazione e per l'applicazione di queste alle entit\xe0 presenti nell'ambiente.\nAll'interno di ",(0,a.jsx)(i.code,{children:"Environment"})," le regole sono applicate tramite la funzione ",(0,a.jsx)(i.code,{children:"validate"}),":"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-scala",children:'infix def validate: Validation[ValidEnvironment] =\n  val entities = env.entities.filterNot:\n    case _: Boundary => true\n    case _ => false\n  val boundaries = Boundary.createBoundaries(env.width, env.height)\n  for\n    width <- bounded(s"$Self width", env.width, MinWidth, MaxWidth, includeMax = true)\n    height <- bounded(s"$Self height", env.height, MinHeight, MaxHeight, includeMax = true)\n    _ <- bounded(s"$Self entities", entities.size, 0, MaxEntities, includeMax = true)\n    entities <- withinBounds(s"$Self entities", entities, width, height)\n    entities <- noCollisions(s"$Self entities", entities ++ boundaries)\n    _ <- entities.toList.traverse_(validateEntity)\n  yield ValidEnvironment.from(env.copy(entities = entities))\n'})}),"\n",(0,a.jsx)(i.p,{children:"In questo modo si vanno a controllare le dimensioni dell'ambiente, oltre alla posizione delle entit\xe0 al suo interno e alla presenza di eventuali collisioni tra di esse.\nSi garantisce poi la validit\xe0 di tutte le entit\xe0 presenti nell'ambiente, assicurando che rispettino le regole di dominio definite."}),"\n",(0,a.jsxs)(i.p,{children:["Se le regole sono rispettate viene quindi creato un ",(0,a.jsx)(i.code,{children:"ValidEnvironment"})," che rappresenta l'ambiente di simulazione corretto.\nQuesto tipo viene utilizzato all'interno del motore di simulazione per garantire che solo ambienti validi vengano utilizzati durante la simulazione.\nInoltre \xe8 utilizzato durante la gestione della configurazione realizzata dall'utente, per garantire che le configurazioni siano sempre valide e coerenti con le regole di dominio."]}),"\n",(0,a.jsx)(i.admonition,{type:"info",children:(0,a.jsxs)(i.p,{children:["Per maggiori dettagli sulla validazione di dominio, si rimanda alla sezione ",(0,a.jsx)(i.a,{href:"/PPS-22-srs/docs/implementation/david-cohen/domain-validation",children:"Validazione di dominio"}),"."]})})]})}function m(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>s});var t=n(6540);const a={},l=t.createContext(a);function o(e){const i=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(l.Provider,{value:i},e.children)}}}]);