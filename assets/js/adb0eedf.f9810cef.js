"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3378],{8453:(e,i,n)=>{n.d(i,{R:()=>s,x:()=>a});var o=n(6540);const r={},l=o.createContext(r);function s(e){const i=o.useContext(l);return o.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(l.Provider,{value:i},e.children)}},9685:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>t});const o=JSON.parse('{"id":"implementation/david-cohen/domain-validation","title":"Validation","description":"Nel modello Domain-Driven, la validazione separa i dati grezzi dagli oggetti di dominio validi. Questo","source":"@site/docs/05-implementation/03-david-cohen/domain-validation.md","sourceDirName":"05-implementation/03-david-cohen","slug":"/implementation/david-cohen/domain-validation","permalink":"/PPS-22-srs/docs/implementation/david-cohen/domain-validation","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"sidebar":1},"sidebar":"docsSidebar","previous":{"title":"SimulationView","permalink":"/PPS-22-srs/docs/implementation/david-cohen/simulation-gui"},"next":{"title":"Giulia Nardicchia","permalink":"/PPS-22-srs/docs/implementation/giulia-nardicchia/"}}');var r=n(4848),l=n(8453);const s={sidebar:1},a="Validation",d={},t=[{value:"Architettura",id:"architettura",level:2},{value:"Tipi e alias",id:"tipi-e-alias",level:3},{value:"Smart constructors",id:"smart-constructors",level:3},{value:"ValidEnvironment",id:"validenvironment",level:3},{value:"Politiche di gestione degli errori",id:"politiche-di-gestione-degli-errori",level:2},{value:"Integrazione nel flusso",id:"integrazione-nel-flusso",level:2}];function c(e){const i={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"validation",children:"Validation"})}),"\n",(0,r.jsxs)(i.p,{children:["Nel modello ",(0,r.jsx)(i.strong,{children:"Domain-Driven"}),", la ",(0,r.jsx)(i.strong,{children:"validazione"})," separa i dati ",(0,r.jsx)(i.strong,{children:"grezzi"})," dagli oggetti di ",(0,r.jsx)(i.strong,{children:"dominio validi"}),". Questo\npreviene che il sistema raggiunga stati incoerenti."]}),"\n",(0,r.jsxs)(i.p,{children:["La convalida \xe8 modellata con ",(0,r.jsx)(i.code,{children:"Either"})," (alias ",(0,r.jsx)(i.code,{children:"Validation[A]"}),") per un comportamento ",(0,r.jsx)(i.strong,{children:"fail-fast"}),": a sinistra (",(0,r.jsx)(i.code,{children:"Left"}),") un\n",(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"DomainError"})})," esplicito, a destra (",(0,r.jsx)(i.code,{children:"Right"}),') un valore gi\xe0 valido. Questo rende l\'uso "sicuro" evidente a\n',(0,r.jsx)(i.em,{children:"compile-time"}),"."]}),"\n",(0,r.jsx)(i.h2,{id:"architettura",children:"Architettura"}),"\n",(0,r.jsx)(i.h3,{id:"tipi-e-alias",children:"Tipi e alias"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"Validation[A]"})}),": un alias per ",(0,r.jsx)(i.code,{children:"Either[DomainError, A]"}),", che rende il contratto di convalida chiaro."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"DomainError"})}),": un ADT (",(0,r.jsx)(i.code,{children:"sealed trait"}),") che enumera le violazioni delle ",(0,r.jsx)(i.strong,{children:"invarianti"})," del modello, come:","\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"Infinite"}),": valori infiniti (es. ",(0,r.jsx)(i.code,{children:"Double.PositiveInfinity"}),");"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"OutOfBounds"}),": entit\xe0 fuori dalla mappa;"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"Collision"}),": collisioni tra entit\xe0."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Ogni errore espone un messaggio ",(0,r.jsx)(i.em,{children:"human-friendly"})," per la UI."]}),"\n",(0,r.jsx)(i.h3,{id:"smart-constructors",children:"Smart constructors"}),"\n",(0,r.jsxs)(i.p,{children:["Gli ",(0,r.jsx)(i.em,{children:"invarianti locali"})," (es. ",(0,r.jsx)(i.code,{children:"ScaleFactor"}),") sono gestiti da ",(0,r.jsx)(i.em,{children:"smart constructors"})," che restituiscono\n",(0,r.jsx)(i.code,{children:"Validation[...]"}),", garantendo che non si possano creare valori non validi senza passare per la logica di convalida."]}),"\n",(0,r.jsx)(i.h3,{id:"validenvironment",children:"ValidEnvironment"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"Environment"})," \xe8 la rappresentazione ",(0,r.jsx)(i.em,{children:"grezza"})," dello stato, mentre ",(0,r.jsx)(i.code,{children:"ValidEnvironment"})," \xe8 un ",(0,r.jsx)(i.em,{children:"opaque type"})," che pu\xf2 essere\nottenuto ",(0,r.jsx)(i.em,{children:"solo"})," dopo un'accurata validazione. Il core della simulazione opera esclusivamente su istanze di\n",(0,r.jsx)(i.code,{children:"ValidEnvironment"}),"."]}),"\n",(0,r.jsx)(i.admonition,{type:"info",children:(0,r.jsxs)(i.p,{children:["Per maggiori dettagli sull'implementazione, vedere ",(0,r.jsx)(i.a,{href:"/PPS-22-srs/docs/implementation/simone-ceredi/environment",children:"Implementazione di Environment e ValidEnvironment"}),"."]})}),"\n",(0,r.jsx)(i.h2,{id:"politiche-di-gestione-degli-errori",children:"Politiche di gestione degli errori"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Dominio"}),": vengono usate le monadi ",(0,r.jsx)(i.code,{children:"Either"})," per un approccio ",(0,r.jsx)(i.em,{children:"fail-fast"}),". La validazione si ferma al primo\n",(0,r.jsx)(i.code,{children:"DomainError"})," riscontrato, garantendo un comportamento semplice e deterministico."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Parsing/Configurazione"}),": gli errori di formato (es. YAML) sono accumulati usando ",(0,r.jsx)(i.code,{children:"Either[Seq[ConfigError], A]"}),",\npermettendo alla UI di mostrare pi\xf9 problemi contemporaneamente."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"UI Mapping"}),": ogni ",(0,r.jsx)(i.code,{children:"DomainError"})," include un ",(0,r.jsx)(i.code,{children:"message"})," pronto per l'uso nella GUI, fornendo un feedback\nimmediato e utile."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"integrazione-nel-flusso",children:"Integrazione nel flusso"}),"\n",(0,r.jsxs)(i.p,{children:["Il flusso end-to-end della simulazione \xe8 una ",(0,r.jsx)(i.strong,{children:"pipeline"}),":"]}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"parsing"})," del file ",(0,r.jsx)(i.em,{children:"YAML"}),";"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"validazione del dominio"})," tramite ",(0,r.jsx)(i.code,{children:"env.validate"}),", che garantisce gli invarianti semantici;"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"configurazione della simulazione"}),", dove il core lavora solo con un ",(0,r.jsx)(i.code,{children:"ValidEnvironment"})," validato."]}),"\n"]}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:["Nota: questo raccorda la ",(0,r.jsx)(i.em,{children:"Configuration"}),", che si occupa del formato dei dati, con il ",(0,r.jsx)(i.em,{children:"dominio"}),", che ne garantisce la\nsemantica, e il ",(0,r.jsx)(i.em,{children:"core"}),", che opera solo su dati sicuri e consistenti."]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);