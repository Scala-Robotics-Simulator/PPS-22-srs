"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7665],{5159:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"implementation/team/entry-point","title":"Entry Point","description":"Il punto di ingresso del simulatore \xe8 il file Main.scala, che si occupa di:","source":"@site/docs/05-implementation/01-team/02-entry-point.md","sourceDirName":"05-implementation/01-team","slug":"/implementation/team/entry-point","permalink":"/PPS-22-srs/docs/implementation/team/entry-point","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Team","permalink":"/PPS-22-srs/docs/implementation/team/"},"next":{"title":"Simone Ceredi","permalink":"/PPS-22-srs/docs/implementation/simone-ceredi/"}}');var t=n(4848),o=n(8453);const l={},r="Entry Point",s={},c=[{value:"Avvio del simulatore",id:"avvio-del-simulatore",level:2},{value:"Domain Specific Language (DSL)",id:"domain-specific-language-dsl",level:3}];function d(e){const i={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"entry-point",children:"Entry Point"})}),"\n",(0,t.jsxs)(i.p,{children:["Il punto di ingresso del simulatore \xe8 il file ",(0,t.jsx)(i.code,{children:"Main.scala"}),", che si occupa di:"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"effettuare il parsing degli argomenti da linea di comando;"}),"\n",(0,t.jsx)(i.li,{children:"ottenere la configurazione iniziale del simulatore;"}),"\n",(0,t.jsx)(i.li,{children:"avviare il ciclo di simulazione."}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"avvio-del-simulatore",children:"Avvio del simulatore"}),"\n",(0,t.jsxs)(i.p,{children:["L'avvio del simulatore avviene tramite la funzione ",(0,t.jsx)(i.code,{children:"run"})," definita nell'oggetto ",(0,t.jsx)(i.code,{children:"Launcher"}),"."]}),"\n",(0,t.jsx)(i.p,{children:"Questa funzione si occupa di avviare il simulatore o in modalit\xe0 grafica o in modalit\xe0 testuale."}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-scala",children:"object Launcher:\n  def run(headless: Boolean = true)(simulationConfig: SimulationConfig[ValidEnvironment]): IO[Option[SimulationState]]\n"})}),"\n",(0,t.jsxs)(i.p,{children:["Quando viene richiamata dal ",(0,t.jsx)(i.code,{children:"Main"})," viene inizialmente effettuata una ",(0,t.jsx)(i.em,{children:"partial application"})," della funzione ",(0,t.jsx)(i.code,{children:"run"}),", passando come argomento il valore booleano ",(0,t.jsx)(i.code,{children:"headless"})," che indica se il simulatore deve essere eseguito in modalit\xe0 testuale (true) o grafica (false).\nSuccessivamente viene passata la configurazione iniziale del simulatore."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-scala",children:"val run = Launcher.run(parsed.headless)\n\nval runner = for\ncfg <- configurationView.init()\n_ <- configurationView.close()\n_ <- run(cfg)\nyield ()\n"})}),"\n",(0,t.jsxs)(i.p,{children:["Il valore di ritorno della funzione ",(0,t.jsx)(i.code,{children:"run"})," \xe8 un effetto ",(0,t.jsx)(i.code,{children:"IO"})," che restituisce opzionalmente lo stato finale (",(0,t.jsx)(i.code,{children:"IO[Option[SimulationState]]"}),")."]}),"\n",(0,t.jsx)(i.h3,{id:"domain-specific-language-dsl",children:"Domain Specific Language (DSL)"}),"\n",(0,t.jsxs)(i.p,{children:["\xc8 stato definito un ",(0,t.jsx)(i.strong,{children:"Domain Specific Language"})," (DSL) per la creazione della configurazione iniziale del simulatore.\nQuesto DSL, oltre a configurare il simulatore, permette inoltre di eseguire la simulazione, tramite il metodo ",(0,t.jsx)(i.code,{children:">>>"}),"."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-scala",children:'extension (simulationConfig: SimulationConfig[ValidEnvironment])\n  @targetName("run")\n  infix def >>> : IO[Option[SimulationState]] =\n    Launcher.run()(simulationConfig)\n'})}),"\n",(0,t.jsx)(i.admonition,{title:"Esecuzione della simulazione tramite il DSL",type:"tip",children:(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-scala",children:"simulation withDuration 100000 withSeed 42 in environment >>>\n"})})}),"\n",(0,t.jsxs)(i.p,{children:["Questo permetter\xe0 di ottenere lo stato finale della simulazione, senza dover passare per l'entry point ",(0,t.jsx)(i.code,{children:"Main"}),", utile per eseguire test automatici e validare il comportamento del simulatore."]})]})}function u(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>r});var a=n(6540);const t={},o=a.createContext(t);function l(e){const i=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),a.createElement(o.Provider,{value:i},e.children)}}}]);