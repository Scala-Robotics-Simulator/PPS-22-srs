"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4704],{7523:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"implementation/simone-ceredi/sensors","title":"Sensori","description":"L\'idea di implementazione iniziale per i sensori era quella di utilizzare il pattern Tagless Final per definire i vari tipi di sensori in modo modulare e riutilizzabile.","source":"@site/docs/05-implementation/02-simone-ceredi/3-sensors.md","sourceDirName":"05-implementation/02-simone-ceredi","slug":"/implementation/simone-ceredi/sensors","permalink":"/PPS-22-srs/docs/implementation/simone-ceredi/sensors","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docsSidebar","previous":{"title":"Implementazione dei DSL","permalink":"/PPS-22-srs/docs/implementation/simone-ceredi/dsl"},"next":{"title":"Configurazione","permalink":"/PPS-22-srs/docs/implementation/simone-ceredi/configuration"}}');var o=n(4848),r=n(8453);const t={sidebar_position:3},a="Sensori",l={},d=[{value:"Sensori di prossimit\xe0",id:"sensori-di-prossimit\xe0",level:2},{value:"Sensori di luce",id:"sensori-di-luce",level:2}];function c(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsx)(i.h1,{id:"sensori",children:"Sensori"})}),"\n",(0,o.jsxs)(i.p,{children:["L'idea di implementazione iniziale per i sensori era quella di utilizzare il pattern ",(0,o.jsx)(i.strong,{children:"Tagless Final"})," per definire i vari tipi di sensori in modo modulare e riutilizzabile."]}),"\n",(0,o.jsxs)(i.p,{children:["Tuttavia l'utilizzo di tale pattern avrebbe portato il trait ",(0,o.jsx)(i.code,{children:"Sensor"})," ad avere la seguente forma:"]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-scala",children:"trait Sensor[F[_], Entity, Environment]:\n  type Data\n  def sense: F[Data]\n"})}),"\n",(0,o.jsxs)(i.p,{children:["L'",(0,o.jsx)(i.strong,{children:"effect type"})," ",(0,o.jsx)(i.code,{children:"F"}),", rappresentante il contesto in cui il sensore opera, si sarebbe per\xf2 riversato su ",(0,o.jsx)(i.strong,{children:"Robot"}),", in quanto robot contiene al suo interno i vari sensori.\nUna possibile soluzione era quella di definire un trait ",(0,o.jsx)(i.code,{children:"Robot[F[_]]"})," che incapsula l'effetto e fornisce metodi per interagire con i sensori."]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-scala",children:"trait Robot[F[_]]:\n  def sensors: List[Sensor[F, Entity, Environment]]\n"})}),"\n",(0,o.jsxs)(i.p,{children:['Ma questo avrebbe "sporcato" la modellazione di ',(0,o.jsx)(i.strong,{children:"Robot"}),"."]}),"\n",(0,o.jsxs)(i.p,{children:["Altra possibilit\xe0 era quella di definire gi\xe0 il tipo ",(0,o.jsx)(i.code,{children:"F"})," all'interno di ",(0,o.jsx)(i.code,{children:"Robot"}),", ad esempio come ",(0,o.jsx)(i.code,{children:"cats.effect.IO"}),"."]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-scala",children:"trait Robot:\n  def sensors: List[Sensor[IO, Entity, Environment]]\n"})}),"\n",(0,o.jsx)(i.p,{children:"Soluzione che sarebbe per\xf2 restrittiva e limiterebbe la flessibilit\xe0 nell'uso di altri effetti."}),"\n",(0,o.jsxs)(i.p,{children:['La soluzione implementata \xe8 quindi un ibrido, che permette di mantenere la flessibilit\xe0 nell\'uso di diversi effetti, senza "sporcare" la modellazione di ',(0,o.jsx)(i.strong,{children:"Robot"}),"."]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-scala",children:"trait Sensor[Entity, Environment]:\n  type Data\n  def sense[F[_]]: F[Data]\n"})}),"\n",(0,o.jsxs)(i.p,{children:["In questo modo, il tipo di effetto pu\xf2 essere specificato al momento della chiamata al metodo ",(0,o.jsx)(i.code,{children:"sense"}),", consentendo una maggiore flessibilit\xe0 nell'uso di diversi contesti di effetto."]}),"\n",(0,o.jsx)(i.h2,{id:"sensori-di-prossimit\xe0",children:"Sensori di prossimit\xe0"}),"\n",(0,o.jsxs)(i.p,{children:["I sensori di prossimit\xe0 sono in grado di rilevare la presenza di entit\xe0 all'interno dell'ambiente circostante il robot. L'implementazione della logica di rilevamento si basa sull'uso di un algoritmo di ",(0,o.jsx)(i.strong,{children:"ray-casting"}),", che simula raggi di luce e determina se un oggetto si trova lungo il percorso di un raggio entro la distanza di rilevamento specificata."]}),"\n",(0,o.jsx)(i.h2,{id:"sensori-di-luce",children:"Sensori di luce"}),"\n",(0,o.jsxs)(i.p,{children:["I sensori di luce sono in grado di rilevare la presenza e l'intensit\xe0 della luce nell'ambiente circostante il robot. L'implementazione della logica di rilevamento si basa sull'uso di un ",(0,o.jsx)(i.code,{children:"lightField"}),", presente all'interno dell'ambiente, che fornisce informazioni sulla quantit\xe0 di luce nelle diverse aree dell'ambiente."]})]})}function p(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>t,x:()=>a});var s=n(6540);const o={},r=s.createContext(o);function t(e){const i=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);