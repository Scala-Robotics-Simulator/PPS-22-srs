"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5337],{8374:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>t});const l=JSON.parse('{"id":"implementation/giulia-nardicchia/dsl-environment-grid-based","title":"DSL per la creazione dell\'ambiente grid-based","description":"In questa pagina viene descritto il Domain-Specific Language (DSL) sviluppato in Scala per la definizione di","source":"@site/docs/05-implementation/04-giulia-nardicchia/dsl-environment-grid-based.md","sourceDirName":"05-implementation/04-giulia-nardicchia","slug":"/implementation/giulia-nardicchia/dsl-environment-grid-based","permalink":"/PPS-22-srs/docs/implementation/giulia-nardicchia/dsl-environment-grid-based","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Command Line Interface","permalink":"/PPS-22-srs/docs/implementation/giulia-nardicchia/cli"},"next":{"title":"Model-View-Controller","permalink":"/PPS-22-srs/docs/implementation/giulia-nardicchia/mvc-implementation"}}');var r=i(4848),a=i(8453);const o={},c="DSL per la creazione dell'ambiente grid-based",d={},t=[{value:"Cell",id:"cell",level:2},{value:"EnvironmentBuilder e GridDSL",id:"environmentbuilder-e-griddsl",level:2},{value:"Inizio di una nuova riga con due celle",id:"inizio-di-una-nuova-riga-con-due-celle",level:3},{value:"Aggiunta di celle a una riga esistente",id:"aggiunta-di-celle-a-una-riga-esistente",level:3},{value:"Inizio di una nuova riga",id:"inizio-di-una-nuova-riga",level:3},{value:"EnvironmentToGridDSL",id:"environmenttogriddsl",level:2}];function s(e){const n={admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"dsl-per-la-creazione-dellambiente-grid-based",children:"DSL per la creazione dell'ambiente grid-based"})}),"\n",(0,r.jsxs)(n.p,{children:["In questa pagina viene descritto il ",(0,r.jsx)(n.strong,{children:"Domain-Specific Language"})," (DSL) sviluppato in Scala per la definizione di\nambienti bidimensionali a griglia, popolati da ",(0,r.jsx)(n.strong,{children:"entit\xe0 statiche"})," (ostacoli, luci) e ",(0,r.jsx)(n.strong,{children:"dinamiche"})," (robot).\nIl DSL fornisce un linguaggio dichiarativo e leggibile, che permette di costruire e visualizzare gli ambienti in maniera\ncompatta, senza dover gestire manualmente coordinate o parametri delle entit\xe0."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Nota: il DSL rappresenta un'approssimazione dell'ambiente reale; alcune funzionalit\xe0 sono state semplificate e per altre\nvengono utilizzati parametri di default."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Il modulo si compone di tre parti principali:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Cell"}),": rappresenta una singola cella della griglia e ne definisce il contenuto (vuota, ostacolo, luce, robot);"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"EnvironmentBuilder"})," e ",(0,r.jsx)(n.code,{children:"GridDSL"}),": forniscono metodi per costruire l'ambiente come una griglia di celle, usando\noperatori infissi per separare le celle e le righe;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"EnvironmentToGridDSL"}),": consente di convertire un ambiente esistente in una rappresentazione a griglia e di stamparlo."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"cell",children:"Cell"}),"\n",(0,r.jsxs)(n.p,{children:["L'",(0,r.jsx)(n.em,{children:"enum"})," ",(0,r.jsx)(n.code,{children:"Cell"})," modella i possibili contenuti di una cella della griglia:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Empty"}),": cella vuota;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Obstacle"}),": cella contenente un ostacolo;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Light"}),": cella contenente una fonte di luce;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Robot(policy: Policy)"}),": cella occupata da un robot dotato di una determinata politica comportamentale (\n",(0,r.jsx)(n.code,{children:"AlwaysForward"}),", ",(0,r.jsx)(n.code,{children:"RandomWalk"}),", ",(0,r.jsx)(n.code,{children:"ObstacleAvoidance"}),", ecc.)."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Ogni cella pu\xf2 essere convertita in una entit\xe0 concreta (Entity) posizionata nello spazio bidimensionale tramite il\nmetodo ",(0,r.jsx)(n.code,{children:"toEntity"}),". Questo passaggio traduce la rappresentazione astratta in oggetti del modello della simulazione."]}),"\n",(0,r.jsxs)(n.p,{children:["Il ",(0,r.jsx)(n.em,{children:"companion object"})," di ",(0,r.jsx)(n.code,{children:"Cell"})," fornisce operatori simbolici che rendono pi\xf9 leggibile la definizione di un ambiente:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--"}),": cella vuota;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"X"}),": ostacolo;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"**"}),": luce;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"A"}),", ",(0,r.jsx)(n.code,{children:"R"}),", ",(0,r.jsx)(n.code,{children:"O"}),", ",(0,r.jsx)(n.code,{children:"P"}),", ",(0,r.jsx)(n.code,{children:"M"}),": robot con diverse politiche di movimento."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["La funzione ",(0,r.jsx)(n.code,{children:"symbolFor"})," serve invece per convertire una politica (",(0,r.jsx)(n.code,{children:"Policy"}),") nel corrispondente simbolo testuale, utile\nnella fase di stampa."]}),"\n",(0,r.jsx)(n.h2,{id:"environmentbuilder-e-griddsl",children:"EnvironmentBuilder e GridDSL"}),"\n",(0,r.jsxs)(n.p,{children:["La ",(0,r.jsx)(n.em,{children:"case class"})," ",(0,r.jsx)(n.code,{children:"EnvironmentBuilder"})," rappresenta una griglia di celle e permette di costruire un oggetto ",(0,r.jsx)(n.code,{children:"Environment"}),"\ncompleto tramite il metodo ",(0,r.jsx)(n.code,{children:"build()"}),".\nLa costruzione segue due passaggi:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["ogni cella viene convertita in entit\xe0 con ",(0,r.jsx)(n.code,{children:"toEntity"}),";"]}),"\n",(0,r.jsxs)(n.li,{children:["le entit\xe0 sono aggregate per ottenere un ",(0,r.jsx)(n.code,{children:"Environment"})," con le dimensioni coerenti (larghezza, altezza)\ne contenente tutti gli oggetti."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["L'",(0,r.jsx)(n.em,{children:"object"})," ",(0,r.jsx)(n.code,{children:"GridDSL"})," fornisce un'interfaccia per definire la griglia in modo dichiarativo, usando operatori infissi:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"|"}),": separa le celle all'interno di una riga;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"||"}),": separa le righe della griglia."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Il codice sfrutta le ",(0,r.jsx)(n.em,{children:"extension methods"})," per estendere la funzionalit\xe0 delle classi ",(0,r.jsx)(n.code,{children:"Cell"})," e ",(0,r.jsx)(n.code,{children:"EnvironmentBuilder"})," senza\nmodificarle direttamente."]}),"\n",(0,r.jsx)(n.h3,{id:"inizio-di-una-nuova-riga-con-due-celle",children:"Inizio di una nuova riga con due celle"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-scala",children:"extension (first: Cell)\n\n  infix def |(next: Cell): EnvironmentBuilder =\n    EnvironmentBuilder(Vector(Vector(first, next)))\n"})}),"\n",(0,r.jsxs)(n.p,{children:["L\u2019operatore ",(0,r.jsx)(n.code,{children:"|"})," estende ",(0,r.jsx)(n.code,{children:"Cell"})," e permette di iniziare una nuova riga della griglia a partire da due celle (",(0,r.jsx)(n.code,{children:"first"})," e\n",(0,r.jsx)(n.code,{children:"next"}),").\nRestituisce un ",(0,r.jsx)(n.code,{children:"EnvironmentBuilder"})," contenente una riga iniziale con le due celle specificate."]}),"\n",(0,r.jsx)(n.h3,{id:"aggiunta-di-celle-a-una-riga-esistente",children:"Aggiunta di celle a una riga esistente"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-scala",children:"extension (env: EnvironmentBuilder)\n\n  infix def |(next: Cell): EnvironmentBuilder =\n    EnvironmentBuilder(\n      env.cells.dropRight(1) :+ (env.cells.lastOption.getOrElse(Vector.empty: Vector[Cell]) :+ next)\n    )\n"})}),"\n",(0,r.jsxs)(n.p,{children:["L\u2019operatore ",(0,r.jsx)(n.code,{children:"|"})," che estende ",(0,r.jsx)(n.code,{children:"EnvironmentBuilder"})," consente di aggiungere una cella alla riga corrente:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"env.cells"})," contiene tutte le righe definite fino a quel momento;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dropRight(1)"})," rimuove l\u2019ultima riga, che verr\xe0 aggiornata;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"lastOption.getOrElse(Vector.empty: Vector[Cell])"})," recupera l\u2019ultima riga, o una riga vuota se non esiste;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:":+ next"})," aggiunge la nuova cella ",(0,r.jsx)(n.code,{children:"next"})," alla fine dell\u2019ultima riga."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"inizio-di-una-nuova-riga",children:"Inizio di una nuova riga"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-scala",children:"extension (env: EnvironmentBuilder)\n\n  infix def ||(next: Cell): EnvironmentBuilder =\n    EnvironmentBuilder(env.cells :+ Vector(next))\n"})}),"\n",(0,r.jsxs)(n.p,{children:["L\u2019operatore ",(0,r.jsx)(n.code,{children:"||"})," serve per iniziare una nuova riga nella griglia.\nPrende la griglia corrente (",(0,r.jsx)(n.code,{children:"env.cells"}),") e aggiunge una nuova riga contenente solo la cella ",(0,r.jsx)(n.code,{children:"next"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Tramite la conversione implicita, un ",(0,r.jsx)(n.code,{children:"EnvironmentBuilder"})," pu\xf2 essere usato direttamente come ",(0,r.jsx)(n.code,{children:"Environment"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"environmenttogriddsl",children:"EnvironmentToGridDSL"}),"\n",(0,r.jsxs)(n.p,{children:["Questa componente si occupa di fare il processo inverso: ovvero, dato un ",(0,r.jsx)(n.code,{children:"Environment"})," gi\xe0 popolato di entit\xe0, produce la griglia di ",(0,r.jsx)(n.code,{children:"Cell"})," corrispondente."]}),"\n",(0,r.jsxs)(n.p,{children:["Per ogni posizione ",(0,r.jsx)(n.code,{children:"(x, y)"})," della griglia, si determina quale cella \xe8 presente:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Robot"}),": priorit\xe0 massima;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Light"}),": priorit\xe0 intermedia;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Obstacle"}),": priorit\xe0 bassa;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Empty"}),": se non ci sono entit\xe0."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Si ricostruisce un ",(0,r.jsx)(n.code,{children:"EnvironmentBuilder"})," a partire dall\u2019ambiente reale.\nIl metodo ",(0,r.jsx)(n.code,{children:"prettyPrint"})," genera una stringa formattata che mostra la griglia."]}),"\n",(0,r.jsx)(n.admonition,{title:"Esempio di stampa della griglia",type:"tip",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"  -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- ||\n  -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- ||\n  -- | -- | M  | -- | -- | X  | X  | -- | -- | -- | -- | -- ||\n  -- | -- | -- | -- | -- | X  | X  | -- | -- | -- | -- | -- ||\n  -- | -- | -- | -- | -- | X  | X  | -- | -- | -- | -- | -- ||\n  -- | -- | -- | -- | -- | X  | X  | -- | -- | ** | -- | -- ||\n  -- | -- | -- | -- | -- | X  | X  | -- | -- | -- | -- | -- ||\n  -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- ||\n  -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- ||\n  -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | --\n"})})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(s,{...e})}):s(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var l=i(6540);const r={},a=l.createContext(r);function o(e){const n=l.useContext(a);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),l.createElement(a.Provider,{value:n},e.children)}}}]);